/*********************************************************************************************************
**
**                                    中国软件开源组织
**
**                                   嵌入式实时操作系统
**
**                                SylixOS(TM)  LW : long wing
**
**                               Copyright All Rights Reserved
**
**--------------文件信息--------------------------------------------------------------------------------
**
** 文   件   名: arch_regs.h
**
** 创   建   人: Ryan.Xin (信金龙)
**
** 文件创建日期: 2015 年 09 月 01 日
**
** 描        述: MIPS 寄存器相关.
*********************************************************************************************************/

#ifndef __MIPS_ARCH_REGS_H
#define __MIPS_ARCH_REGS_H

/*********************************************************************************************************
  MIPS 的寄存器列表
*********************************************************************************************************/

typedef UINT        ARCH_REG_T;

typedef struct {
    ARCH_REG_T REG_uiRA;                                                /*  返回地址寄存器              */
    ARCH_REG_T REG_uiFP;                                                /*  帧栈指针寄存器              */
    ARCH_REG_T REG_uiGP;                                                /*  全局指针寄存器              */

    ARCH_REG_T REG_uiT9;												/*  子程序暂存变量寄存器        */
    ARCH_REG_T REG_uiT8;

    ARCH_REG_T REG_uiS7;                                                /*  子程序保存变量寄存器   	 	*/
    ARCH_REG_T REG_uiS6;
    ARCH_REG_T REG_uiS5;
    ARCH_REG_T REG_uiS4;
    ARCH_REG_T REG_uiS3;
    ARCH_REG_T REG_uiS2;
    ARCH_REG_T REG_uiS1;
    ARCH_REG_T REG_uiS0;

    ARCH_REG_T REG_uiT7;                                                /*  子程序暂存变量寄存器        */
    ARCH_REG_T REG_uiT6;
    ARCH_REG_T REG_uiT5;
    ARCH_REG_T REG_uiT4;
    ARCH_REG_T REG_uiT3;
    ARCH_REG_T REG_uiT2;
    ARCH_REG_T REG_uiT1;
    ARCH_REG_T REG_uiT0;

    ARCH_REG_T REG_uiA3;                                                /*  子程序参数寄存器            */
    ARCH_REG_T REG_uiA2;
    ARCH_REG_T REG_uiA1;
    ARCH_REG_T REG_uiA0;

    ARCH_REG_T REG_uiV1;                                                /*  子程序返回值寄存器          */
    ARCH_REG_T REG_uiV0;

    ARCH_REG_T REG_uiAT;                                                /*  汇编综合寄存器              */

    ARCH_REG_T REG_uiCP0DataLO;                                         /*  除数低位寄存器              */
    ARCH_REG_T REG_uiCP0DataHI;                                         /*  除数高位寄存器              */
    ARCH_REG_T REG_uiCP0Cause;                                          /*  产生中断或者异常查看的寄存器*/
    ARCH_REG_T REG_uiCP0Status;                                         /*  CP0 协处理器状态寄存器      */
    ARCH_REG_T REG_uiEPC;                                               /*  程序计数器寄存器			*/
} ARCH_REG_CTX;

/*********************************************************************************************************
  标准调用回溯堆栈表
*********************************************************************************************************/

typedef struct {
    ARCH_REG_T FP_uiFP;                                                 /*  帧栈指针寄存器              */
    ARCH_REG_T FP_uiRA;                                                 /*  返回地址寄存器              */
} ARCH_FP_CTX;

/*********************************************************************************************************
  堆栈中的寄存器信息所占大小
*********************************************************************************************************/
#define ARCH_REG_CTX_WORD_SIZE  35
#define ARCH_STK_MIN_WORD_SIZE  128

/*********************************************************************************************************
  CPU 字长
*********************************************************************************************************/

#define LW_CFG_CPU_WORD_LENGHT  32                                      /*  CPU 字长                    */

#endif                                                                  /*  __MIPS_ARCH_REGS_H          */
/*********************************************************************************************************
  END
*********************************************************************************************************/
