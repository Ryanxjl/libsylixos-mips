/*********************************************************************************************************
**
**                                    中国软件开源组织
**
**                                   嵌入式实时操作系统
**
**                                SylixOS(TM)  LW : long wing
**
**                               Copyright All Rights Reserved
**
**--------------文件信息--------------------------------------------------------------------------------
**
** 文   件   名: net_cfg.h
**
** 创   建   人: Han.Hui (韩辉)
**
** 文件创建日期: 2008 年 03 月 13 日
**
** 描        述: BSD4.4 or lwip 兼容网络部分配置参数
*********************************************************************************************************/

#ifndef __NET_CFG_H
#define __NET_CFG_H

/*********************************************************************************************************
*                                       基本参数
*  依存关系: 1: 定长分区内存管理
*            2: 互斥信号量
*            3: 二值信号量
*            4: I/O 系统
*            5: 定时器
*********************************************************************************************************/

#define LW_CFG_NET_EN                   1                               /*  是否允许网络功能            */
#define LW_CFG_NET_GATEWAY              1                               /*  是否配置为网关 (BSD only)   */

/*********************************************************************************************************
*                                       BSD 网络缓存配置参数
*  依存关系: 
*  注  意  : 如果 LW_CFG_MBUF_BASE 和 LW_CFG_CLUSTER_BASE 为 0, 表示自动分配. 
             当系统被配置为支持虚拟内存管理时, 系统自动使用动态分页创建缓冲内存.
             当不支持虚拟内存管理时, 系统使用系统堆进行对齐内存分配.
*********************************************************************************************************/

#define LW_CFG_MAX_MBUFS                256                             /*  mbuf 缓冲池的个数           */
#define LW_CFG_MAX_CLUSTERS             128                             /*  簇的个数                    */

#define LW_CFG_MBUF_BASE                0                               /*  mbuf 缓冲池基地址           */
#define LW_CFG_CLUSTER_BASE             0                               /*  簇基地址                    */

/*********************************************************************************************************
*                                       lwip 设置
*  依存关系: 1: 计数信号量
*            2: I/O 系统
*            3: FIO 
*            4: shell (网络工具需要)
*            5: thread ext
*  注  意  : 这里仅配置最为基本的 lwip 选项, 详细配置需要在 lwip 相关配置文件中完成.
*            如果使用特殊网络, 请在这里加入 PBUF_POOL_BUFSIZE 的配置, 例如: wifi 网络由于底层协议需要较大
*            的头部, 所以需要 PBUF_POOL_BUFSIZE 加大. (使用连续的 POOL 内存可以提高网络驱动效率, 可直接
*            使用 DMA 操作数据包)
*            在不修改源码的前提下: armcc v1.1 不能编译 ppp 库.
*            
*            LW_CFG_LWIP_MSG_SIZE 
*            LW_CFG_LWIP_NUM_NETBUF 
*            LW_CFG_LWIP_NUM_POOLS
*            LW_CFG_LWIP_MEM_SIZE       等配置都与网络协议栈吞吐性能息息相关. 
*
*            建议将 LW_CFG_LWIP_JOBQUEUE_PRIORITY 与 LW_CFG_LWIP_PRIORITY 设置为相同(效率较高).
*            网络驱动程序对内存的操作尽量不要放在中断中, 建议完全交由 netjob 处理.
*********************************************************************************************************/

/*********************************************************************************************************
                     lwip 缓存配置 (以下配置决定 RAM 使用量和 lwip 效率)
*********************************************************************************************************/

#define LW_CFG_LWIP_MEM_SIZE            (512 * LW_CFG_KB_SIZE)          /*  lwip 内存大小               */
#define LW_CFG_LWIP_MSG_SIZE            512                             /*  lwip 内部消息队列缓冲长度   */
#define LW_CFG_LWIP_POOL_SIZE           1600                            /*  lwip POOL 内存块大小        */
                                                                        /*  注意: 必须是字对齐的        */

#define LW_CFG_LWIP_NUM_PBUFS           256                             /*  系统总 pbuf 数量            */
#define LW_CFG_LWIP_NUM_NETBUF          256                             /*  缓冲网络分组 netbuf 数量    */
#define LW_CFG_LWIP_NUM_POOLS           LW_CFG_LWIP_MSG_SIZE            /*  等长缓冲总数量(高速缓冲)    */
                                                                        /*  驱动程序与 AF_PACKET 使用   */
                                                                        
/*********************************************************************************************************
                                  lwip 校验和配置 (建议使用软件生成校验和并检查)
*********************************************************************************************************/

#define LW_CFG_LWIP_GEN_CHECKSUM        1                               /*  是否通过协议栈自己生成校验和*/
                                                                        /*  如果网卡可自动计算发送校验和*/
                                                                        /*  此配置可为 0                */
#define LW_CFG_LWIP_CHECK_CHECKSUM      1                               /*  是否软件检查接收数据包校验和*/
                                                                        /*  如果网卡可自动检查接收校验和*/
                                                                        /*  此配置可为 0                */

/*********************************************************************************************************
                                  lwip 组件配置
*********************************************************************************************************/

#define LW_CFG_LWIP_DEBUG               0                               /*  lwip 运行在调试模式         */
#define LW_CFG_LWIP_DEBUG_LEVEL         1                               /*  lwip 调试等级               */

#ifdef  __GNUC__
#define LW_CFG_LWIP_PPP                 1                               /*  lwip ppp 支持               */
#define LW_CFG_LWIP_PPPOE               1                               /*  lwip pppoe 支持             */
#define LW_CFG_LWIP_PPPOL2TP            1                               /*  lwip pppol2tp 隧道协议支持  */
#define LW_CFG_LWIP_NUM_PPP             2                               /*  lwip ppp 最大会话数         */

#else
#define LW_CFG_LWIP_PPP                 0                               /*  lwip ppp 支持               */
#define LW_CFG_LWIP_PPPOE               0                               /*  lwip pppoe 支持             */
#define LW_CFG_LWIP_PPPOL2TP            0                               /*  lwip pppol2tp 隧道协议支持  */
#define LW_CFG_LWIP_NUM_PPP             0                               /*  lwip ppp 最大会话数         */
#endif                                                                  /*  __GNUC__                    */

#define LW_CFG_LWIP_JOBQUEUE_SIZE       256                             /*  sylixos job queue size      */
#define LW_CFG_LWIP_STK_SIZE            4096                            /*  lwip thread default stksize */

#define LW_CFG_LWIP_TCP_PCB             100                             /*  允许同时的 TCP 连接数       */
#define LW_CFG_LWIP_UDP_PCB             100                             /*  允许同时的 UDP 数量         */
#define LW_CFG_LWIP_RAW_PCB             20                              /*  允许同时的 RAW 数量         */

#define LW_CFG_LWIP_DHCP                1                               /*  是否允许 DHCP 协议          */
#define LW_CFG_LWIP_AUTOIP              1                               /*  自动分析获取 IP             */

/*********************************************************************************************************
*                                       lwip TCP 设置 
*
* 关于 LW_CFG_LWIP_TCP_WND 不能大于网卡的接收缓冲区大小, 否则可能出现网卡接收溢出的错误, 造成网络速度颠簸.
*********************************************************************************************************/

#define LW_CFG_LWIP_TCP_WND             0                               /*  接收缓冲大小, 0 为自动      */
#define LW_CFG_LWIP_TCP_RCV_SCALE       0                               /*  TCP 接收窗口扩大指数 0 ~ 14 */
#define LW_CFG_LWIP_TCP_MAXRTX          8                               /*  TCP 最大重传数, 1 ~ 12      */
#define LW_CFG_LWIP_TCP_SYNMAXRTX       6                               /*  最大 SYN 重传数, 1 ~ 12     */

/*********************************************************************************************************
*                                       lwip SNMP 设置
*********************************************************************************************************/

#define LW_CFG_LWIP_SNMP                1                               /*  SNMP 代理                   */

/*********************************************************************************************************
*                                       lwip IGMP 设置
*********************************************************************************************************/

#define LW_CFG_LWIP_IGMP                1                               /*  是否使能 IGMP               */
#define LW_CFG_LWIP_IGMP_GROUP          20                              /*  可加入的 IGMP 组最大数量    */

/*********************************************************************************************************
*                                       lwip 以太网设置
*
* 关于 LW_CFG_LWIP_ARP_TRUST_IP_MAC , 如果使用有线以太网, 则可以设置为不信任, 如果使用自组网无线通信网络,
* 则推荐为 1 , 这样可以减少虚拟 ARP 数据包的数量, 从而减少无谓的无线数据包碰撞可能性. 
*********************************************************************************************************/

#define LW_CFG_LWIP_ARP_TABLE_SIZE      100                             /*  以太网接口 ARP 表大小       */
#define LW_CFG_LWIP_ARP_TRUST_IP_MAC    1                               /*  接收 IP 包是否更新 ARP      */
                                                                        /*  windows 不信任, 建议为 0    */
#define LW_CFG_LWIP_ETH_PAD_SIZE        2                               /*  以太包头填充对齐数量        */
                                                                        /*  6 + 2 = 8                   */
/*********************************************************************************************************
*                                       编译器相关配置 (__CC_ARM(armcc) __GNUC__(gcc) ...)
*********************************************************************************************************/

#ifdef  __GNUC__
#define LW_CFG_STRUCT_PACK_FIELD(x)     x
#define LW_CFG_STRUCT_PACK_STRUCT       __attribute__((packed))
#define LW_CFG_STRUCT_PACK_BEGIN                                        /*  单字节缩排结构体            */
#define LW_CFG_STRUCT_PACK_END                                          /*  结束单字节缩排结构体        */

#elif   defined(__CC_ARM)
#define LW_CFG_STRUCT_PACK_FIELD(x)     x
#define LW_CFG_STRUCT_PACK_STRUCT       
#define LW_CFG_STRUCT_PACK_BEGIN        __packed                        /*  单字节缩排结构体            */
#define LW_CFG_STRUCT_PACK_END                                          /*  结束单字节缩排结构体        */

#else
#define LW_CFG_STRUCT_PACK_FIELD(x)     x
#define LW_CFG_STRUCT_PACK_STRUCT       __attribute__((packed))         /*  XXX                         */
#define LW_CFG_STRUCT_PACK_BEGIN                                        /*  单字节缩排结构体            */
#define LW_CFG_STRUCT_PACK_END                                          /*  结束单字节缩排结构体        */
#endif                                                                  /*  __GNUC__                    */

/*********************************************************************************************************
                                  AF_UNIX 配置
*********************************************************************************************************/

#define LW_CFG_NET_UNIX_EN              1                               /*  AF_UNIX 使能                */

/*********************************************************************************************************
                                  AF_PACKET 配置
*********************************************************************************************************/

#define LW_CFG_NET_PACKET_MMAP          1                               /*  AF_PACKET 是否支持 RING 操作*/
                                                                        /*  必须使能 VMM 管理           */
                                                                        
/*********************************************************************************************************
                                  wireless 配置
*********************************************************************************************************/

#define LW_CFG_NET_WIRELESS_EN          1                               /*  是否支持无线网络(wifi802.11)*/

#endif                                                                  /*  __NET_CFG_H                 */
/*********************************************************************************************************
  END
*********************************************************************************************************/
